apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: basic-workflow-bootstrap
  title: Basic workflow bootstrap project
  description: Bootstrap project for basic serverless workflows
  tags:
    - orchestrator
    - built-in
  links:
    - url: https://openshift-knative.github.io/docs/docs/latest/serverless-logic/about.html
      title: About OpenShift Serverless Logic
      icon: techdocs
    - url: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/index.html
      title: SonataFlow Guides
      icon: techdocs
spec:
  owner: janus-orchestrator
  type: basic-workflow-bootstrap

  parameters:
    - title: Provide information about the workflow software project
      description: Configure the github repository where the Maven software project is located 
      required:
        - orgName
        - repoName
        - workflowId
        - workflowType
        - owner
        - system
      properties:
        orgName:
          title: Organization Name
          type: string
          ui:autofocus: true
          description: Github Organization Name
        repoName:
          title: Repository Name
          type: string
          description: Github repository name
          default: onboarding
        description:
          title: Description
          type: string
          description: Description added to the README file
          default: A workflow for onboarding applications to OCP cluster
        workflowId:
          title: Workflow ID
          type: string
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)([-.]?[a-zA-Z0-9]+)*$'
          description: Unique identifier of the workflow in SonataFlow
          default: onboarding
        workflowType:
          title: Workflow Type
          type: string
          description: Metadata added to the workflow to distinguish assessment and infrastructure
          enum:
            - assessment
            - infrastructure
          default: infrastructure
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
          default: user:guest
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
    - title: Provide information about the Maven software project
      required:
        - groupId
        - artifactId
        - version
      properties:
        groupId:
          title: Group ID
          type: string
          default: io.janus.workflow
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)([-._][a-zA-Z0-9]+)*$'
          description: Maven Group ID eg (io.janus.workflow)
          ui:autofocus: true
        artifactId:
          title: Artifact ID
          type: string
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)([-._][a-zA-Z0-9]+)*$'
          description: Maven Artifact ID
          default: onboarding
        version:
          title: Project version
          type: string
          default: 1.0.0-SNAPSHOT
          description: Maven version, also used to tag the generated artifacts
    - title: Provide information about the Build environment
      required:
        - cicd
        # TODO: make the following optional in case None is selected
        - namespace
        - argocdNamespace
      properties:
        cicd:
          title: Select a CI/CD method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: tekton
          enum:
            - none
            - tekton_argocd
          enumNames:
            - None
            - Tekton with ArgoCD
        namespace:
          title: Namespace
          type: string
          default: sonataflow-infra
          description: Deployment namespace
        argocdNamespace:
          title: ArgoCD Namespace
          type: string
          default: argocd
          description: ArgoCD application namespace
  steps:
    - id: sourceCodeTemplate
      name: Generating the Source Code  and Catalog Info Component
      action: fetch:template
      input:
        # "Relative path is not allowed to refer to a directory outside its parent"
        url: ./skeleton/
        values:
          namespace: ${{ parameters.namespace }}
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          description: ${{ parameters.description }}
          groupId: ${{ parameters.groupId }}
          artifactId: ${{ parameters.artifactId }}
          version: ${{ parameters.version }}
          workflowId: ${{ parameters.workflowId }}
          workflowType: ${{ parameters.workflowType }}
          sourceControl: github.com
          gitUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}.git
          gitConfigUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}-config.git
          applicationType: workflow-project
          lifecycle: development
        targetPath: workflow
    - id: renameFiles
      action: fs:rename
      name: Rename files
      input:
        files:
          - from: workflow/src/main/resources/schemas/input-schema.json
            to: workflow/src/main/resources/schemas/${{ parameters.artifactId }}-input-schema.json
            overwrite: true
          - from: workflow/src/main/resources/schemas/template__sub_schema__sample_section.json
            to: workflow/src/main/resources/schemas/${{ parameters.artifactId }}__sub_schema__sample_section.json
            overwrite: true
          - from: workflow/src/main/resources/${{ parameters.workflowType }}-template.sw.yaml
            to: workflow/src/main/resources/${{ parameters.artifactId }}.sw.yaml
            overwrite: false
    - id: deleteFiles
      action: fs:delete
      name: Delete files
      input:
        files:
          - workflow/src/main/resources/assessment-template.sw.yaml
          - workflow/src/main/resources/infrastructure-template.sw.yaml
    - id: automationTemplate
      if: ${{ parameters.cicd == 'tekton_argocd' }}
      name: Generating the manifests for workflow automation
      action: fetch:template
      input:
        url: ../automation/
        values:
          namespace: ${{ parameters.namespace }}
          argocdNamespace: ${{ parameters.argocdNamespace }}
          workflowId: ${{ parameters.workflowId }}
          gitUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}.git
          # gitConfigUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}-config.git
          gitConfigUrl: https://github.com/${{ parameters.orgName }}/${{ parameters.repoName }}-config.git
        targetPath: workflow/automation
    - id: publish
      name: Publishing to the Source Code Repository
      action: publish:github
      input:
        repoVisibility: public
        allowedHosts: ['github.com']
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}
        defaultBranch: main
        sourcePath: workflow
    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
    - id: configCodeTemplate
      name: Generating the Config Code Component and Catalog Info Component
      action: fetch:template
      input:
        url: ../kustomize/
        values:
          workflowId: ${{ parameters.workflowId }}
          namespace: ${{ parameters.namespace }}
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}-config
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: workflow-project
          description: ${{ parameters.description }}
          sourceControl: github.com
          lifecycle: development
        targetPath: config
    - id: publishConfig
      name: Publishing to the Config Code Repository
      action: publish:github
      input:
        repoVisibility: public
        allowedHosts: ['github.com']
        description: Configuration repository for ${{ parameters.orgName }}/${{ parameters.repoName }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}-config
        defaultBranch: main
        sourcePath: config
    - id: registerConfig
      name: Registering the Config Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishConfig.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
    - id: createArgocdResources
      if: ${{ parameters.cicd == 'tekton_argocd' }}
      name: Create the ArgoCD Resources
      action: argocd:create-resources
      input:
        appName: ${{ parameters.workflowId }}
        argoInstance: main
        namespace: ${{ parameters.argocdNamespace }}
        repoUrl: ${{ steps.publish.output.remoteUrl }}
        projectName: orchestrator-bootstrap
        labelValue: ${{ parameters.workflowId }}
        path: automation
  output:
    links:
      - title: Open the Source Code Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}

